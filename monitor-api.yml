name: API Monitoring

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check API Health
      id: health_check
      run: |
        response=$(curl -s -w "\n%{http_code}" ${{ secrets.API_URL }}/health)
        http_code=$(echo "$response" | tail -n1)
        body=$(echo "$response" | head -n-1)
        
        echo "HTTP Status: $http_code"
        echo "Response: $body"
        
        if [ "$http_code" != "200" ]; then
          echo "API is unhealthy!"
          exit 1
        fi
        
    - name: Test API Response Time
      run: |
        echo "Testing API response time..."
        
        start_time=$(date +%s%N)
        
        curl -X POST ${{ secrets.API_URL }}/chat \
          -H "Content-Type: application/json" \
          -H "X-API-Key: ${{ secrets.ADMIN_API_KEY }}" \
          -d '{"question": "Quick test"}' \
          -o /dev/null -s
        
        end_time=$(date +%s%N)
        elapsed_time=$(( ($end_time - $start_time) / 1000000 ))
        
        echo "Response time: ${elapsed_time}ms"
        
        if [ "$elapsed_time" -gt 5000 ]; then
          echo "Warning: Response time is over 5 seconds!"
        fi
    
    - name: Create Issue if API is Down
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸš¨ API Health Check Failed',
            body: 'The API health check failed at ' + new Date().toISOString() + '\n\nPlease check the API status immediately!',
            labels: ['urgent', 'api-down']
          })
