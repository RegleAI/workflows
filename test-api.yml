# .github/workflows/test-api.yml
name: API Tests

on:
  # Run tests manually from GitHub UI
  workflow_dispatch:
  # Run tests on push to main
  push:
    branches: [ main ]
  # Run tests every hour
  schedule:
    - cron: '0 * * * *'

jobs:
  test-api:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Create Test Script
      run: |
        cat > test-api.js << 'EOF'
        const API_URL = '${{ secrets.API_URL }}';
        const ADMIN_KEY = '${{ secrets.ADMIN_API_KEY }}';
        const USER_KEY = '${{ secrets.USER_API_KEY }}';

        async function runTests() {
          console.log('🧪 Starting API Tests\n');
          
          // Test 1: Health Check
          console.log('Test 1: Health Check');
          try {
            const response = await fetch(`${API_URL}/health`);
            const data = await response.json();
            console.log(`✅ Status: ${response.status}`);
            console.log(`✅ API Status: ${data.status}`);
            console.log(`✅ Version: ${data.version}\n`);
          } catch (error) {
            console.log(`❌ Error: ${error.message}\n`);
            process.exit(1);
          }
          
          // Test 2: No API Key (should fail)
          console.log('Test 2: Request without API Key');
          try {
            const response = await fetch(`${API_URL}/chat`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ question: 'Test question' })
            });
            const data = await response.json();
            if (response.status === 401) {
              console.log(`✅ Correctly rejected: ${data.error}\n`);
            } else {
              console.log(`❌ Should have been rejected\n`);
              process.exit(1);
            }
          } catch (error) {
            console.log(`❌ Error: ${error.message}\n`);
            process.exit(1);
          }
          
          // Test 3: Admin API Key
          console.log('Test 3: Admin API Key');
          try {
            const response = await fetch(`${API_URL}/chat`, {
              method: 'POST',
              headers: { 
                'Content-Type': 'application/json',
                'X-API-Key': ADMIN_KEY
              },
              body: JSON.stringify({ 
                question: 'What are the main requirements in Part F?' 
              })
            });
            const data = await response.json();
            if (response.status === 200) {
              console.log(`✅ Status: ${response.status}`);
              console.log(`✅ Answer length: ${data.answer?.length} chars`);
              console.log(`✅ Processing time: ${data.processingTimeMs}ms\n`);
            } else {
              console.log(`❌ Failed with status: ${response.status}`);
              console.log(`❌ Error: ${data.error}\n`);
              process.exit(1);
            }
          } catch (error) {
            console.log(`❌ Error: ${error.message}\n`);
            process.exit(1);
          }
          
          // Test 4: User API Key with Rate Limits
          if (USER_KEY && USER_KEY !== 'not-set') {
            console.log('Test 4: User API Key');
            try {
              const response = await fetch(`${API_URL}/chat`, {
                method: 'POST',
                headers: { 
                  'Content-Type': 'application/json',
                  'X-API-Key': USER_KEY
                },
                body: JSON.stringify({ 
                  question: 'What is the minimum ventilation rate?' 
                })
              });
              const data = await response.json();
              
              if (response.status === 200) {
                console.log(`✅ Status: ${response.status}`);
                console.log(`✅ Rate Limit Info:`);
                console.log(`   - Tier: ${response.headers.get('x-ratelimit-tier')}`);
                console.log(`   - Hourly: ${response.headers.get('x-ratelimit-remaining-hourly')}/${response.headers.get('x-ratelimit-limit-hourly')}`);
                console.log(`   - Daily: ${response.headers.get('x-ratelimit-remaining-daily')}/${response.headers.get('x-ratelimit-limit-daily')}\n`);
              } else {
                console.log(`⚠️  User key test failed: ${data.error}\n`);
              }
            } catch (error) {
              console.log(`❌ Error: ${error.message}\n`);
            }
          }
          
          console.log('✅ All tests completed!');
        }

        runTests().catch(error => {
          console.error('Test suite failed:', error);
          process.exit(1);
        });
        EOF

    - name: Run API Tests
      run: node test-api.js
      
    - name: Test with cURL
      run: |
        echo "Testing with cURL commands..."
        
        # Health check
        curl -f ${{ secrets.API_URL }}/health || exit 1
        
        # Test with API key
        curl -f -X POST ${{ secrets.API_URL }}/chat \
          -H "Content-Type: application/json" \
          -H "X-API-Key: ${{ secrets.ADMIN_API_KEY }}" \
          -d '{"question": "What is Part F?"}' || exit 1
